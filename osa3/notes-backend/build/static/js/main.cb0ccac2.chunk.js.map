{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","type","Footer","style","margin","padding","width","borderTop","background","position","bottom","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","allNotes","notesToShow","filter","components_Notification","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","placeholder","value","onChange","target","map","components_Note","key","find","n","changedNote","objectSpread","updatedNote","catch","err","setTimeout","toggleImportanceOf","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cb0ccac2.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'https://damp-cliffs-98753.herokuapp.com/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update };\n","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    margin: 0,\n    padding: 0,\n    width: '100%',\n    borderTop: '1px solid green',\n    background: 'white',\n    position: 'fixed',\n    bottom: 0,\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science 2019</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport noteService from './services/notes';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(allNotes => setNotes(allNotes));\n  }, []);\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote =>\n        setNotes(notes.map(note => (note.id !== id ? note : updatedNote)))\n      )\n      .catch(err => {\n        setErrorMessage(`muistiinpano '${note.content}' on jo poistettu`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ));\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString,\n      important: Math.random() > 0.5\n    };\n\n    noteService.create(noteObject).then(newNote => {\n      setNotes(notes.concat(newNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} type=\"error\" />\n\n      <form onSubmit={addNote}>\n        <input\n          placeholder=\"uusi muistiinpano...\"\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">tallenna</button>\n      </form>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          näyta {showAll ? 'vain tärkeät' : 'kaikki'}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}